apiVersion: v1
kind: Service
metadata:
#  annotations:
#    prometheus.io/port: "9153"
#    prometheus.io/scrape: "true"
  name: middle
spec:
  ports:
    - port: 8002
      protocol: TCP
      targetPort: 8002
  selector:
    th: middle
---
apiVersion: v1
data:
  config.json: |
    {
      "Port": 8002,
      "JaegerURL": "http://my-jf-jaeger-collector:14268/api/traces",
      "BottomHost": "bottom",
      "BottomPort": 8003,
      "BottomGRPCPort": 9003
    }
kind: ConfigMap
metadata:
  name: middle-config
---
apiVersion: v1
kind: Pod
metadata:
  name: middle
  labels:
    th: middle
spec:
  containers:
    - image: docker.io/mfenwick100/telemetry-hacking:latest
      imagePullPolicy: IfNotPresent
      command: ["/opt/th", "middle", "--config-path", "/tmp/config.json", "-v", "debug"]
      name: middle
      ports:
        - containerPort: 8002
          name: http
          protocol: TCP
      resources: {}
      securityContext: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /tmp
          name: config
  dnsPolicy: ClusterFirst
  restartPolicy: Always
  terminationGracePeriodSeconds: 30
  volumes:
    - configMap:
        name: middle-config
      name: config
---
